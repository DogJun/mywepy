<style lang="less" scoped>
.test {
  background: #fff;
  &-text {
    color: #000;
  }
}
</style>

<template>
  <view class="test">
    <panel>
      <view class="title" slot="title">测试slot</view>
      <text class="test-text">测试文本 </text>
      <text class="test-text">测试文本 </text>
      <text class="test-text">测试文本 </text>
    </panel>
    <panel>
      <view class="title" slot="title">测试mixin</view>
      <text>{{mixin}}</text>
    </panel>
    <!-- <panel>
      <view class="title" slot="title">测试跳转</view>
      <navigator url="/pages/index">跳转到新页面</navigator>
    </panel> -->
    <panel>
      <view class="title" slot="title">测试点击事件</view>
      <text>{{num}}</text>
      <button @tap="plus" size="mini">+</button>
    </panel>
    <panel>
      <view class="title" slot="title">测试第三方组件</view>
      <button @tap="toast" size="mini">第三方组件</button>
    </panel>
    <panel>
      <view class="title" slot="title">测试redux</view>
      <button @tap="test" size="mini">测试redux</button>
      <block wx:for="{{testList}}">
        <text>{{item}}</text>
      </block>
    </panel>
    <panel>
      <view class="title" slot="title">测试repeat</view>
      <repeat for="{{list}}" key="index" index="index" item="item">
        <child :item="item"></child>
      </repeat>
    </panel>
    <toast />
  </view>
</template>

<script>
import wepy from 'wepy'
import Panel from '@/components/panel'
import Child from '@/components/child'
import testMixin from '@/mixins/test'
import Toast from 'wepy-com-toast'
import { connect } from 'wepy-redux'
import * as actions from '@/store/actions/test'

@connect({
  testList (state) {
    return state.test.testList
  }
}, {
  ...actions
})
export default class Login extends wepy.page {
  config = {
    navigationBarTitleText: '测试页面'
  }
  data = {
    num: 0,
    list: [
      {
        id: 1,
        title: 'title1'
      },
      {
        id: 2,
        title: 'title2'
      }
    ]
  }
  mixins = [testMixin]
  onLoad() {
    // this.methods.test()
  }
  methods = {
    plus (e) {
      console.log(e)
      setTimeout(() => {
        this.num++
        this.$apply()
      }, 1000)
    },
    toast () {
      let promise = this.$invoke('toast', 'show', {
        title: '自定义标题',
        img: 'https://raw.githubusercontent.com/kiinlam/wetoast/master/images/star.png'
      })

      promise.then((d) => {
        console.log('toast done')
      })
    }
  }
  components = {
    panel: Panel,
    toast: Toast,
    child: Child
  }
}
</script>
